{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "oe-chip\nChip component to be used in oe-paper-chip and oe-typeahead-chip components",
      "summary": "",
      "path": "oe-chip.js",
      "properties": [
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Label to display inside the chip",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 12
            },
            "end": {
              "line": 79,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_onremove",
          "description": "Fires remove-chip event when close btn is clicked",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 89,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeChip",
      "attributes": [
        {
          "name": "label",
          "description": "Label to display inside the chip",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 12
            },
            "end": {
              "line": 79,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-chip"
    },
    {
      "description": "`oe-paper-chip`\n A control for editing an array of strings much like a tags control.\n\n## Styling\n\nThe following custom properties and mixins are available for styling\n\nCSS Variable | Description | Default\n----------------|-------------|----------\n`--paper-input-container-invalid-color` | Color applied to asterisk indicating, required field | `--paper-deep-orange-a700`\n`--paper-input-container-color`         | Default container color        | `--secondary-text-color`\n`--oe-label-mixin`                      | Mixin applied on label         |",
      "summary": "",
      "path": "oe-paper-chip.js",
      "properties": [
        {
          "name": "_focusableElement",
          "type": "HTMLElement",
          "description": "Returns a reference to the focusable element. Overridden from\nPaperInputBehavior to correctly focus the native input.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 344,
              "column": 2
            },
            "end": {
              "line": 347,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_inputElement",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 349,
              "column": 2
            },
            "end": {
              "line": 352,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "value",
          "type": "Array | null | undefined",
          "description": "Value array of strings or objects",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 6
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\"",
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "unique",
          "type": "boolean | null | undefined",
          "description": "Flag denoting only unique values should be added to value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 6
            },
            "end": {
              "line": 139,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "separator",
          "type": "string | null | undefined",
          "description": "Seperator used to identify each entry.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 6
            },
            "end": {
              "line": 147,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\",\""
        },
        {
          "name": "valueProperty",
          "type": "string | null | undefined",
          "description": "key name when the 'value' is a array of objects.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 154,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 2
            },
            "end": {
              "line": 161,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_keyDown",
          "description": "Checks the entered key and performs operation based on user input in the input tag.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 2
            },
            "end": {
              "line": 215,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "keyDownEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleNav",
          "description": "Helps navigation of user thorugh keyboard once a chip-item is focused. Navigation is done via\nUP/DOWN/LEFT/RIGHT/HOME/END keys. The focused chip can be deleted using BACKSPACE key.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 2
            },
            "end": {
              "line": 270,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "keyDownEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onremove",
          "description": "Removes the selected chip item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 276,
              "column": 2
            },
            "end": {
              "line": 283,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_valueChanged",
          "description": "Observer on value change to handle label float.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 288,
              "column": 2
            },
            "end": {
              "line": 298,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newVal"
            },
            {
              "name": "oldVal"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_validate",
          "description": "Performs validation of the entered value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 304,
              "column": 2
            },
            "end": {
              "line": 323,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean",
            "desc": "valid flag"
          }
        },
        {
          "name": "_getChipLabel",
          "description": "Returns the value from the object based on the key",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 330,
              "column": 2
            },
            "end": {
              "line": 336,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "any",
              "description": "Value instance within the array."
            }
          ],
          "return": {
            "type": "any",
            "desc": "value present in the path of `valueProperty` or the input value."
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/oe-paper-chip-demo.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 39,
          "column": 0
        },
        "end": {
          "line": 353,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OePaperChip",
      "attributes": [
        {
          "name": "value",
          "description": "Value array of strings or objects",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 6
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "unique",
          "description": "Flag denoting only unique values should be added to value",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 6
            },
            "end": {
              "line": 139,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "separator",
          "description": "Seperator used to identify each entry.",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 6
            },
            "end": {
              "line": 147,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value-property",
          "description": "key name when the 'value' is a array of objects.",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 154,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "unique-changed",
          "description": "Fired when the `unique` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-paper-chip",
      "mixins": [
        "OECommonMixin",
        "OEFieldMixin"
      ]
    },
    {
      "description": "`oe-typeahead-chip`\n A control extending from oe-paper-chip , provides suggestions to be picked up.\n\n## Styling\n\nThe following custom properties and mixins are available for styling\n\nCSS Variable | Description | Default\n----------------|-------------|----------\n`--paper-input-container-invalid-color` | Color applied to asterisk indicating, required field | `--paper-deep-orange-a700`\n`--paper-input-container-color`         | Default container color        | `--secondary-text-color`\n`--oe-label-mixin`                      | Mixin applied on label         |",
      "summary": "",
      "path": "oe-typeahead-chip.js",
      "properties": [
        {
          "name": "displayproperty",
          "type": "string | null | undefined",
          "description": "Property to be displayed in chips and menu",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 12
            },
            "end": {
              "line": 82,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valueproperty",
          "type": "string | null | undefined",
          "description": "Property to be pushed into the value array",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 12
            },
            "end": {
              "line": 89,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "value",
          "type": "Array | null | undefined",
          "description": "Array of string or objects",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 12
            },
            "end": {
              "line": 98,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_fetchModel\"",
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "_suggestions",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 12
            },
            "end": {
              "line": 103,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_suggestionsChanged\"",
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "unique",
          "type": "boolean | null | undefined",
          "description": "Select unique values only when values are of type String or Number.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 12
            },
            "end": {
              "line": 111,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "selectedItem",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 12
            },
            "end": {
              "line": 116,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "debounceDuration",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 12
            },
            "end": {
              "line": 121,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "300"
        },
        {
          "name": "searchurl",
          "type": "string | null | undefined",
          "description": "Url used for searching using the input entered. It should contain a place holder 'SEARCH_STRING' for this search text\nlike : /getData/Location?filter=SEARCH_STRING.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 12
            },
            "end": {
              "line": 129,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "dataurl",
          "type": "string | null | undefined",
          "description": "Url used to fetch the value objects once value is set on this element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 12
            },
            "end": {
              "line": 137,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_fetchModel\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 12
            },
            "end": {
              "line": 143,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 12
            },
            "end": {
              "line": 149,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 172,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_valueListChanged",
          "description": "Sets the _dummyText based on the length of 'value' property.\nThis inturn handles the label float of the input.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 189,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "delta",
              "type": "changeObject"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_keyDown",
          "description": "Overrides oe-paper-chip event listener to ignore handling usage of seperator keys like\ncomma (,) and Enter.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 197,
              "column": 4
            },
            "end": {
              "line": 216,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "keydownEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onKeyUp",
          "description": "Handles key up event to focus and navigate the menu dropdown.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 4
            },
            "end": {
              "line": 265,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "keyupEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onSearchInput",
          "description": "On user input makes ajax call to get suggestions.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 271,
              "column": 4
            },
            "end": {
              "line": 313,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "inputEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getRequestUrl",
          "description": "Generate a search url based on replacing 'searchurl' property with search_string key.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 4
            },
            "end": {
              "line": 326,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "searchString",
              "type": "string"
            }
          ]
        },
        {
          "name": "getDisplayValue",
          "description": "Gets the value to be displayed in dropdown menu",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 332,
              "column": 4
            },
            "end": {
              "line": 337,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object"
            }
          ]
        },
        {
          "name": "_onPaperItemTap",
          "description": "Selects the tapped menu item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 343,
              "column": 4
            },
            "end": {
              "line": 346,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "tapEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setSelectedItem",
          "description": "Handles selection of item and pushes it to the 'value' array.\nMaintains a copy in _selectedItems.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 353,
              "column": 4
            },
            "end": {
              "line": 368,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onremove",
          "description": "Overiding oe-paper-chip remove code to handle selectedItems list",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 374,
              "column": 4
            },
            "end": {
              "line": 382,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_blurHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 384,
              "column": 4
            },
            "end": {
              "line": 396,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_validate",
          "description": "Performs validation of the entered value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 402,
              "column": 4
            },
            "end": {
              "line": 415,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean",
            "desc": "valid flag"
          }
        },
        {
          "name": "_getChipLabel",
          "description": "Overriding chip label to be fetched based on displayproperty",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 421,
              "column": 4
            },
            "end": {
              "line": 437,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "any"
            }
          ]
        },
        {
          "name": "_suggestionsChanged",
          "description": "On suggestion change resizes the dropdown with and selects the first item in the menu.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 442,
              "column": 4
            },
            "end": {
              "line": 447,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "sortData",
          "description": "Sorts data based on displayproperty\nKept method as public so that user can overwrite it if needed",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 453,
              "column": 4
            },
            "end": {
              "line": 455,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ]
        },
        {
          "name": "_fetchModel",
          "description": "When new value is set on the element , makes call to dataurl with the 'value' stringified,\nTo get the list of selected Items.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 461,
              "column": 4
            },
            "end": {
              "line": 507,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/oe-typeahead-chip-demo.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 35,
          "column": 0
        },
        "end": {
          "line": 508,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeTypeaheadChip",
      "attributes": [
        {
          "name": "displayproperty",
          "description": "Property to be displayed in chips and menu",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 12
            },
            "end": {
              "line": 82,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "valueproperty",
          "description": "Property to be pushed into the value array",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 12
            },
            "end": {
              "line": 89,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value",
          "description": "Array of string or objects",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 12
            },
            "end": {
              "line": 98,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "unique",
          "description": "Select unique values only when values are of type String or Number.",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 12
            },
            "end": {
              "line": 111,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "selected-item",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 12
            },
            "end": {
              "line": 116,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "debounce-duration",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 12
            },
            "end": {
              "line": 121,
              "column": 13
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "searchurl",
          "description": "Url used for searching using the input entered. It should contain a place holder 'SEARCH_STRING' for this search text\nlike : /getData/Location?filter=SEARCH_STRING.",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 12
            },
            "end": {
              "line": 129,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "dataurl",
          "description": "Url used to fetch the value objects once value is set on this element.",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 12
            },
            "end": {
              "line": 137,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disabled",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 12
            },
            "end": {
              "line": 143,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "required",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 12
            },
            "end": {
              "line": 149,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "pt-item-confirmed",
          "description": "Fired when a item from the menu is selected.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-item-changed",
          "description": "Fired when the `selectedItem` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "disabled-changed",
          "description": "Fired when the `disabled` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "required-changed",
          "description": "Fired when the `required` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-typeahead-chip",
      "mixins": [
        "OEAjaxMixin"
      ]
    }
  ]
}
