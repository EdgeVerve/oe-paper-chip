{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "oe-chip\nChip component to be used in oe-paper-chip and oe-typeahead-chip components",
      "summary": "",
      "path": "oe-chip.js",
      "properties": [
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "Label to display inside the chip",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 12
            },
            "end": {
              "line": 79,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_onremove",
          "description": "Fires remove-chip event when close btn is clicked",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 89,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeChip",
      "attributes": [
        {
          "name": "label",
          "description": "Label to display inside the chip",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 12
            },
            "end": {
              "line": 79,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-chip"
    },
    {
      "description": "`oe-paper-chip`\n A control for editing an array of strings much like a tags control.\n\n## Styling\n\nThe following custom properties and mixins are available for styling\n\nCSS Variable | Description | Default\n----------------|-------------|----------\n`--paper-input-container-invalid-color` | Color applied to asterisk indicating, required field | `--paper-deep-orange-a700`\n`--paper-input-container-color`         | Default container color        | `--secondary-text-color`\n`--oe-label-mixin`                      | Mixin applied on label         |",
      "summary": "",
      "path": "oe-paper-chip.js",
      "properties": [
        {
          "name": "errorPlaceholders",
          "type": "Array | null | undefined",
          "description": "i18n placeholders for the error",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 31,
              "column": 8
            },
            "end": {
              "line": 33,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "userErrorMessage",
          "type": "Object | null | undefined",
          "description": "User specified Custom error message\nIf userErrorMessage is defined, show appropriate user-error-message\nwhich is either an object\n   ```{\n      rangeOverflow:'Date should be prior',\n      default: 'Invalid Value in field'\n   }```\nor a string, 'Invalid value'\nSo check if specific error-coode is defined in user-error-message object\nIf not, see if 'default' error-code is defined\notherwise if user-error-message is string, show that error-message,\nif not, then resort to incoming-error-message.",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 49,
              "column": 8
            },
            "end": {
              "line": 51,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "errorMessage",
          "type": "string | null | undefined",
          "description": "Error message displayed",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 54,
              "column": 8
            },
            "end": {
              "line": 57,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "_hasCustomMessage",
          "type": "boolean | null | undefined",
          "description": "Flag for Custom error message/code",
          "privacy": "protected",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 60,
              "column": 8
            },
            "end": {
              "line": 63,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "hidden",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 65,
              "column": 8
            },
            "end": {
              "line": 69,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "validationFunction",
          "type": "string | null | undefined",
          "description": "Custom validation function",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 72,
              "column": 8
            },
            "end": {
              "line": 74,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "validateOnInput",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 76,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "fieldId",
          "type": "string | null | undefined",
          "description": "binding to property",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 81,
              "column": 8
            },
            "end": {
              "line": 81,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "_focusableElement",
          "type": "HTMLElement",
          "description": "Returns a reference to the focusable element. Overridden from\nPaperInputBehavior to correctly focus the native input.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 372,
              "column": 2
            },
            "end": {
              "line": 375,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_inputElement",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 377,
              "column": 2
            },
            "end": {
              "line": 380,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "value",
          "type": "Array | null | undefined",
          "description": "Value array of strings or objects",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\"",
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "unique",
          "type": "boolean | null | undefined",
          "description": "Flag denoting only unique values should be added to value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 6
            },
            "end": {
              "line": 140,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "separator",
          "type": "string | null | undefined",
          "description": "Seperator used to identify each entry.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 6
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\",\""
        },
        {
          "name": "valueProperty",
          "type": "string | null | undefined",
          "description": "key name when the 'value' is a array of objects.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 6
            },
            "end": {
              "line": 155,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_deepValue",
          "description": "Get the value from the 'obj' based on the 'path'.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../oe-mixins/oe-common-mixin.js",
            "start": {
              "line": 37,
              "column": 4
            },
            "end": {
              "line": 43,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj",
              "type": "Object",
              "description": "object to navigate"
            },
            {
              "name": "path",
              "type": "string",
              "description": "path for navigation"
            }
          ],
          "return": {
            "type": "Any",
            "desc": "value present in the given path of the obj."
          },
          "inheritedFrom": "OECommonMixin"
        },
        {
          "name": "_deepSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../oe-mixins/oe-common-mixin.js",
            "start": {
              "line": 45,
              "column": 4
            },
            "end": {
              "line": 62,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj"
            },
            {
              "name": "path"
            },
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "OECommonMixin"
        },
        {
          "name": "debounce",
          "description": "Call `debounce` to collapse multiple requests for a named task into\none invocation which is made after the wait time has elapsed with\nno new request.  If no wait time is given, the callback will be called\nat microtask timing (guaranteed before paint).\n\n    debouncedClickAction(e) {\n      // will not call `processClick` more than once per 100ms\n      this.debounce('click', function() {\n       this.processClick();\n      } 100);\n    }",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-common-mixin.js",
            "start": {
              "line": 88,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "jobName",
              "type": "string",
              "description": "String to identify the debounce job."
            },
            {
              "name": "callback",
              "type": "function (): void",
              "description": "Function that is called (with `this`\n  context) when the wait time elapses."
            },
            {
              "name": "wait",
              "type": "number",
              "description": "Optional wait time in milliseconds (ms) after the\n  last signal that must elapse before invoking `callback`"
            }
          ],
          "return": {
            "type": "!Object",
            "desc": "Returns a debouncer object on which exists the\nfollowing methods: `isActive()` returns true if the debouncer is\nactive; `cancel()` cancels the debouncer if it is active;\n`flush()` immediately invokes the debounced callback if the debouncer\nis active."
          },
          "inheritedFrom": "OECommonMixin"
        },
        {
          "name": "async",
          "description": "Runs a callback function asynchronously.\n\nBy default (if no waitTime is specified), async callbacks are run at\nmicrotask timing, which will occur before paint.",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-common-mixin.js",
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 109,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "callback",
              "type": "!Function",
              "description": "The callback function to run, bound to `this`."
            },
            {
              "name": "waitTime",
              "type": "number=",
              "description": "Time to wait before calling the\n  `callback`.  If unspecified or 0, the callback will be run at microtask\n  timing (before paint)."
            }
          ],
          "return": {
            "type": "number",
            "desc": "Handle that may be used to cancel the async job."
          },
          "inheritedFrom": "OECommonMixin"
        },
        {
          "name": "cancelAsync",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-common-mixin.js",
            "start": {
              "line": 120,
              "column": 4
            },
            "end": {
              "line": 122,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "handle"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "OECommonMixin"
        },
        {
          "name": "fire",
          "description": "Polymer fire function used to dispatch custom events",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-common-mixin.js",
            "start": {
              "line": 131,
              "column": 4
            },
            "end": {
              "line": 143,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "string",
              "description": "event name"
            },
            {
              "name": "detail",
              "type": "Object",
              "description": "data to be sent in the event"
            },
            {
              "name": "options",
              "type": "Object",
              "description": "optionals options for the event {bubbles:Boolean,cancelable:Boolean,composed:Boolean,node:HTML Element}"
            }
          ],
          "return": {
            "type": "Event",
            "desc": "Custom event created based on the parameters"
          },
          "inheritedFrom": "OECommonMixin"
        },
        {
          "name": "setValidity",
          "description": "Sets the vality and errorMessage based on the input parameters and\nthe `userErrorMessage`",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 113,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isValid",
              "type": "boolean",
              "description": "boolean flag for validation"
            },
            {
              "name": "errorMessage",
              "type": "string",
              "description": "error message from the input element"
            },
            {
              "name": "errorPlaceholders",
              "type": "Array",
              "description": "placeholders for errors"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "_setValidity",
          "description": "Sets the 'invalid' flag and 'errorMessage'",
          "privacy": "protected",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 152,
              "column": 4
            },
            "end": {
              "line": 159,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isValid",
              "type": "boolean",
              "description": "boolean flag for validation"
            },
            {
              "name": "errorMessage",
              "type": "string",
              "description": "error message from the input element"
            },
            {
              "name": "errorPlaceholders",
              "type": "Array",
              "description": "placeholders for errors"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "_validate",
          "description": "Performs validation of the entered value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 329,
              "column": 2
            },
            "end": {
              "line": 351,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean",
            "desc": "valid flag"
          }
        },
        {
          "name": "validate",
          "description": "Validate, overrides Paper-Input-Behavior's validate method\nUsed to set the validity based on core input element's validity",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 177,
              "column": 4
            },
            "end": {
              "line": 221,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean",
            "desc": "validity of core input element."
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 2
            },
            "end": {
              "line": 169,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "hashFunc",
          "description": "Generates a Hash for the given string.",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 256,
              "column": 4
            },
            "end": {
              "line": 263,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str",
              "type": "string",
              "description": "String for which Hash needs to be computed"
            }
          ],
          "return": {
            "type": "number",
            "desc": "hash number for the given string"
          },
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "_keyDown",
          "description": "Checks the entered key and performs operation based on user input in the input tag.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 2
            },
            "end": {
              "line": 200,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "keyDownEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleNav",
          "description": "Helps navigation of user thorugh keyboard once a chip-item is focused. Navigation is done via\nUP/DOWN/LEFT/RIGHT/HOME/END keys. The focused chip can be deleted using BACKSPACE key.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 2
            },
            "end": {
              "line": 255,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "keyDownEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_addToTag",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 2
            },
            "end": {
              "line": 284,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onremove",
          "description": "Removes the selected chip item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 290,
              "column": 2
            },
            "end": {
              "line": 297,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__getValidValue",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 299,
              "column": 2
            },
            "end": {
              "line": 303,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueChange"
            }
          ]
        },
        {
          "name": "_valueChanged",
          "description": "Observer on value change to handle label float.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 2
            },
            "end": {
              "line": 323,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newVal"
            },
            {
              "name": "oldVal"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getChipLabel",
          "description": "Returns the value from the object based on the key",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 358,
              "column": 2
            },
            "end": {
              "line": 364,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "any",
              "description": "Value instance within the array."
            }
          ],
          "return": {
            "type": "any",
            "desc": "value present in the path of `valueProperty` or the input value."
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/oe-paper-chip-demo.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 39,
          "column": 0
        },
        "end": {
          "line": 381,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OePaperChip",
      "attributes": [
        {
          "name": "error-placeholders",
          "description": "i18n placeholders for the error",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 31,
              "column": 8
            },
            "end": {
              "line": 33,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "user-error-message",
          "description": "User specified Custom error message\nIf userErrorMessage is defined, show appropriate user-error-message\nwhich is either an object\n   ```{\n      rangeOverflow:'Date should be prior',\n      default: 'Invalid Value in field'\n   }```\nor a string, 'Invalid value'\nSo check if specific error-coode is defined in user-error-message object\nIf not, see if 'default' error-code is defined\notherwise if user-error-message is string, show that error-message,\nif not, then resort to incoming-error-message.",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 49,
              "column": 8
            },
            "end": {
              "line": 51,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "error-message",
          "description": "Error message displayed",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 54,
              "column": 8
            },
            "end": {
              "line": 57,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "hidden",
          "description": "",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 65,
              "column": 8
            },
            "end": {
              "line": 69,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "validation-function",
          "description": "Custom validation function",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 72,
              "column": 8
            },
            "end": {
              "line": 74,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "validate-on-input",
          "description": "",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 76,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "field-id",
          "description": "binding to property",
          "sourceRange": {
            "file": "../oe-mixins/oe-field-mixin.js",
            "start": {
              "line": 81,
              "column": 8
            },
            "end": {
              "line": 81,
              "column": 23
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "name": "value",
          "description": "Value array of strings or objects",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 131,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "unique",
          "description": "Flag denoting only unique values should be added to value",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 6
            },
            "end": {
              "line": 140,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "separator",
          "description": "Seperator used to identify each entry.",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 6
            },
            "end": {
              "line": 148,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value-property",
          "description": "key name when the 'value' is a array of objects.",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 6
            },
            "end": {
              "line": 155,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "oe-field-error",
          "description": "Fired when the field is invalid",
          "metadata": {},
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "type": "CustomEvent",
          "name": "oe-field-ok",
          "description": "Fired when the field is valid",
          "metadata": {},
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "type": "CustomEvent",
          "name": "register-field",
          "description": "Fired when the element is attached to DOM to register the element",
          "metadata": {},
          "inheritedFrom": "OEFieldMixin"
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "unique-changed",
          "description": "Fired when the `unique` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-paper-chip",
      "mixins": [
        "OECommonMixin",
        "OEFieldMixin"
      ]
    },
    {
      "description": "`oe-typeahead-chip`\n A control extending from oe-paper-chip , provides suggestions to be picked up.\n\n## Styling\n\nThe following custom properties and mixins are available for styling\n\nCSS Variable | Description | Default\n----------------|-------------|----------\n`--paper-input-container-invalid-color` | Color applied to asterisk indicating, required field | `--paper-deep-orange-a700`\n`--paper-input-container-color`         | Default container color        | `--secondary-text-color`\n`--oe-label-mixin`                      | Mixin applied on label         |",
      "summary": "",
      "path": "oe-typeahead-chip.js",
      "properties": [
        {
          "name": "displayproperty",
          "type": "string | null | undefined",
          "description": "Property to be displayed in chips and menu",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 12
            },
            "end": {
              "line": 82,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valueproperty",
          "type": "string | null | undefined",
          "description": "Property to be pushed into the value array",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 12
            },
            "end": {
              "line": 89,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "value",
          "type": "Array | null | undefined",
          "description": "Array of string or objects",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 12
            },
            "end": {
              "line": 98,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_fetchModel\"",
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "_suggestions",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 12
            },
            "end": {
              "line": 103,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_suggestionsChanged\"",
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "unique",
          "type": "boolean | null | undefined",
          "description": "Select unique values only when values are of type String or Number.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 12
            },
            "end": {
              "line": 111,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "selectedItem",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 12
            },
            "end": {
              "line": 116,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "debounceDuration",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 12
            },
            "end": {
              "line": 121,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "300"
        },
        {
          "name": "searchurl",
          "type": "string | null | undefined",
          "description": "Url used for searching using the input entered. It should contain a place holder 'SEARCH_STRING' for this search text\nlike : /getData/Location?filter=SEARCH_STRING.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 12
            },
            "end": {
              "line": 129,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "dataurl",
          "type": "string | null | undefined",
          "description": "Url used to fetch the value objects once value is set on this element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 12
            },
            "end": {
              "line": 137,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_fetchModel\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 12
            },
            "end": {
              "line": 143,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 12
            },
            "end": {
              "line": 149,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "makeAjaxCall",
          "description": "Generates a oe-ajax call based on the parameter and calls the callback function with error or response.",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-ajax-mixin.js",
            "start": {
              "line": 37,
              "column": 8
            },
            "end": {
              "line": 88,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "string",
              "description": "url to make the ajax call"
            },
            {
              "name": "method",
              "type": "string",
              "description": "method for ajax call ,'get','put','post' or 'delete'"
            },
            {
              "name": "body",
              "type": "Object",
              "description": "Content to pass as body of the call"
            },
            {
              "name": "header",
              "type": "Object",
              "description": "Headers set on the request"
            },
            {
              "name": "params",
              "type": "Object",
              "description": "Query parameters like filter etc."
            },
            {
              "name": "ajaxProps",
              "type": "Object",
              "description": "Properties to set on ajax like contentType and handleAs."
            },
            {
              "name": "cb",
              "type": "Function",
              "description": "Function called with Error and response."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "OEAjaxMixin"
        },
        {
          "name": "makeXhrCall",
          "description": "Generates a Vanilla JS XHR call based on the arguments",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-ajax-mixin.js",
            "start": {
              "line": 98,
              "column": 8
            },
            "end": {
              "line": 126,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "string",
              "description": "url to make the xhr call"
            },
            {
              "name": "method",
              "type": "string",
              "description": "method for xhr call ,'get','put','post' or 'delete'"
            },
            {
              "name": "body",
              "type": "Object",
              "description": "Content to pass as body of the call"
            },
            {
              "name": "header",
              "type": "Object",
              "description": "Headers set on the request"
            },
            {
              "name": "cb",
              "type": "Function",
              "description": "Function called with Error and response."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "OEAjaxMixin"
        },
        {
          "name": "resolveError",
          "description": "Resolves the error from server into error message",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-ajax-mixin.js",
            "start": {
              "line": 133,
              "column": 8
            },
            "end": {
              "line": 137,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "err",
              "type": "Error",
              "description": "Error from server call"
            }
          ],
          "return": {
            "type": "string",
            "desc": "error message"
          },
          "inheritedFrom": "OEAjaxMixin"
        },
        {
          "name": "resolveErrors",
          "description": "Resolves multiple errors from server into error message",
          "privacy": "public",
          "sourceRange": {
            "file": "../oe-mixins/oe-ajax-mixin.js",
            "start": {
              "line": 144,
              "column": 8
            },
            "end": {
              "line": 236,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "err",
              "type": "Error",
              "description": "Error from server call"
            }
          ],
          "return": {
            "type": "(string | Object)",
            "desc": "error message or errors array"
          },
          "inheritedFrom": "OEAjaxMixin"
        },
        {
          "name": "_getRestApiUrl",
          "description": "Computes valid path based on restApiRoot",
          "privacy": "protected",
          "sourceRange": {
            "file": "../oe-mixins/oe-ajax-mixin.js",
            "start": {
              "line": 242,
              "column": 8
            },
            "end": {
              "line": 245,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "string"
            }
          ],
          "inheritedFrom": "OEAjaxMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 4
            },
            "end": {
              "line": 173,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_valueListChanged",
          "description": "Sets the _dummyText based on the length of 'value' property.\nThis inturn handles the label float of the input.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 4
            },
            "end": {
              "line": 199,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "delta",
              "type": "changeObject"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_keyDown",
          "description": "Overrides oe-paper-chip event listener to ignore handling usage of seperator keys like\ncomma (,) and Enter.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 4
            },
            "end": {
              "line": 226,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "keydownEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onKeyUp",
          "description": "Handles key up event to focus and navigate the menu dropdown.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 4
            },
            "end": {
              "line": 275,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "keyupEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onSearchInput",
          "description": "On user input makes ajax call to get suggestions.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 4
            },
            "end": {
              "line": 323,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "inputEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getRequestUrl",
          "description": "Generate a search url based on replacing 'searchurl' property with search_string key.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 329,
              "column": 4
            },
            "end": {
              "line": 336,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "searchString",
              "type": "string"
            }
          ]
        },
        {
          "name": "getDisplayValue",
          "description": "Gets the value to be displayed in dropdown menu",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 347,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object"
            }
          ]
        },
        {
          "name": "_onPaperItemTap",
          "description": "Selects the tapped menu item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 353,
              "column": 4
            },
            "end": {
              "line": 356,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "tapEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setSelectedItem",
          "description": "Handles selection of item and pushes it to the 'value' array.\nMaintains a copy in _selectedItems.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 363,
              "column": 4
            },
            "end": {
              "line": 378,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onremove",
          "description": "Overiding oe-paper-chip remove code to handle selectedItems list",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 384,
              "column": 4
            },
            "end": {
              "line": 392,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_blurHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 394,
              "column": 4
            },
            "end": {
              "line": 406,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_validate",
          "description": "Performs validation of the entered value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 412,
              "column": 4
            },
            "end": {
              "line": 430,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean",
            "desc": "valid flag"
          }
        },
        {
          "name": "_getChipLabel",
          "description": "Overriding chip label to be fetched based on displayproperty",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 436,
              "column": 4
            },
            "end": {
              "line": 452,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "any"
            }
          ]
        },
        {
          "name": "_suggestionsChanged",
          "description": "On suggestion change resizes the dropdown with and selects the first item in the menu.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 457,
              "column": 4
            },
            "end": {
              "line": 462,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "sortData",
          "description": "Sorts data based on displayproperty\nKept method as public so that user can overwrite it if needed",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 468,
              "column": 4
            },
            "end": {
              "line": 470,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a"
            },
            {
              "name": "b"
            }
          ]
        },
        {
          "name": "_fetchModel",
          "description": "When new value is set on the element , makes call to dataurl with the 'value' stringified,\nTo get the list of selected Items.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 476,
              "column": 4
            },
            "end": {
              "line": 522,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/oe-typeahead-chip-demo.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 35,
          "column": 0
        },
        "end": {
          "line": 523,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeTypeaheadChip",
      "attributes": [
        {
          "name": "displayproperty",
          "description": "Property to be displayed in chips and menu",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 12
            },
            "end": {
              "line": 82,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "valueproperty",
          "description": "Property to be pushed into the value array",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 12
            },
            "end": {
              "line": 89,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value",
          "description": "Array of string or objects",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 12
            },
            "end": {
              "line": 98,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "unique",
          "description": "Select unique values only when values are of type String or Number.",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 12
            },
            "end": {
              "line": 111,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "selected-item",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 12
            },
            "end": {
              "line": 116,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "debounce-duration",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 12
            },
            "end": {
              "line": 121,
              "column": 13
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "searchurl",
          "description": "Url used for searching using the input entered. It should contain a place holder 'SEARCH_STRING' for this search text\nlike : /getData/Location?filter=SEARCH_STRING.",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 12
            },
            "end": {
              "line": 129,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "dataurl",
          "description": "Url used to fetch the value objects once value is set on this element.",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 12
            },
            "end": {
              "line": 137,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disabled",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 12
            },
            "end": {
              "line": 143,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "required",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 12
            },
            "end": {
              "line": 149,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "pt-item-confirmed",
          "description": "Fired when a item from the menu is selected.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-item-changed",
          "description": "Fired when the `selectedItem` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "disabled-changed",
          "description": "Fired when the `disabled` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "required-changed",
          "description": "Fired when the `required` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-typeahead-chip",
      "mixins": [
        "OEAjaxMixin"
      ]
    }
  ]
}
